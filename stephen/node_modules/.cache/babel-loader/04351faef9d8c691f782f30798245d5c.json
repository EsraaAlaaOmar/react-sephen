{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Esraa\\\\Desktop\\\\react\\\\stephen\\\\src\\\\App.js\";\nimport faker from 'faker';\nimport Comment from \"./components/comment\";\nimport Approval from './components/Aproval';\nimport React from 'react';\nimport SeasonSisplay from './components/SeasonDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Lat: null,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      Lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n    console.log('my component was rendered to the screen');\n  }\n\n  componentDidUpdate() {\n    console.log('my component was just updated  it rendered!');\n  }\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Error:\", this.state.errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(SeasonSisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" LOADING .. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this); //     if (!this.state.lat &&  !this.state.errorMessage)\n    //     { return<div> LOADING .. </div>\n    // }}\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Esraa/Desktop/react/stephen/src/App.js"],"names":["faker","Comment","Approval","React","SeasonSisplay","App","Component","state","Lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","console","log","componentDidUpdate","render","lat"],"mappings":";AAAA,OAAOA,KAAP,MAAiB,OAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAsB,sBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE7BC,KAF6B,GAEtB;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAC;AAAzB,KAFsB;AAAA;;AAG7BC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAE,KAAKC,QAAL,CAAc;AAAER,MAAAA,GAAG,EAACO,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,KAAd,CADZ,EAEEC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAACP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAAnB,KAAd,CAFT;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD;;AACDC,EAAAA,kBAAkB,GAAE;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACD;;AACHE,EAAAA,MAAM,GAAE;AACN,QAAM,KAAKjB,KAAL,CAAWE,YAAX,IAA0B,CAAC,KAAKF,KAAL,CAAWkB,GAA5C,EAAkD;AAChD,0BAAO;AAAA,8BAAa,KAAKlB,KAAL,CAAWE,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACC;;AACH,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA2B,KAAKF,KAAL,CAAWkB,GAA1C,EAA+C;AAC7C,0BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AAED;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CARM,CAUR;AACA;AACA;AACD;;AA5BgC;;AA8BjC,eAAepB,GAAf","sourcesContent":["import faker from'faker'\nimport Comment from \"./components/comment\";\nimport Approval  from './components/Aproval';\nimport React from 'react';\nimport SeasonSisplay from './components/SeasonDisplay'; \n\nclass App extends React.Component{\n  \n    state ={Lat: null, errorMessage:''}\n    componentDidMount(){\n      window.navigator.geolocation.getCurrentPosition(\n        position=>this.setState({ Lat:position.coords.latitude }),\n        err => this.setState({errorMessage: err.message})\n      \n      )\n\n      console.log('my component was rendered to the screen')\n    }\n    componentDidUpdate(){\n      console.log('my component was just updated  it rendered!')\n    }\n  render(){\n    if (  this.state.errorMessage&& !this.state.lat  ){\n      return <div> Error:{this.state.errorMessage}</div>\n      }\n    if (!this.state.errorMessage&& this.state.lat ){\n      return <SeasonSisplay />\n\n    }\n    return <div> LOADING .. </div>\n   \n  //     if (!this.state.lat &&  !this.state.errorMessage)\n  //     { return<div> LOADING .. </div>\n  // }}\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}